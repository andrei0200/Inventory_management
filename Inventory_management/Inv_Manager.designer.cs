#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory_Manager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Inventory_Management")]
	public partial class Inv_ManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertANGAJATI(ANGAJATI instance);
    partial void UpdateANGAJATI(ANGAJATI instance);
    partial void DeleteANGAJATI(ANGAJATI instance);
    partial void InsertCATEGORIE_PRODUSE(CATEGORIE_PRODUSE instance);
    partial void UpdateCATEGORIE_PRODUSE(CATEGORIE_PRODUSE instance);
    partial void DeleteCATEGORIE_PRODUSE(CATEGORIE_PRODUSE instance);
    partial void InsertCREDENTIALE(CREDENTIALE instance);
    partial void UpdateCREDENTIALE(CREDENTIALE instance);
    partial void DeleteCREDENTIALE(CREDENTIALE instance);
    partial void InsertDETALII_CONT(DETALII_CONT instance);
    partial void UpdateDETALII_CONT(DETALII_CONT instance);
    partial void DeleteDETALII_CONT(DETALII_CONT instance);
    partial void InsertPRODUSE(PRODUSE instance);
    partial void UpdatePRODUSE(PRODUSE instance);
    partial void DeletePRODUSE(PRODUSE instance);
    #endregion
		
		public Inv_ManagerDataContext() : 
				base(global::Inventory_Manager.Properties.Settings.Default.Inventory_ManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Inv_ManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Inv_ManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Inv_ManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Inv_ManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ANGAJATI> ANGAJATIs
		{
			get
			{
				return this.GetTable<ANGAJATI>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORIE_PRODUSE> CATEGORIE_PRODUSEs
		{
			get
			{
				return this.GetTable<CATEGORIE_PRODUSE>();
			}
		}
		
		public System.Data.Linq.Table<CREDENTIALE> CREDENTIALEs
		{
			get
			{
				return this.GetTable<CREDENTIALE>();
			}
		}
		
		public System.Data.Linq.Table<DETALII_CONT> DETALII_CONTs
		{
			get
			{
				return this.GetTable<DETALII_CONT>();
			}
		}
		
		public System.Data.Linq.Table<PRODUSE> PRODUSEs
		{
			get
			{
				return this.GetTable<PRODUSE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANGAJATI")]
	public partial class ANGAJATI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ANGAJATI_ID;
		
		private int _CREDENTIALE_ID;
		
		private int _CONT_ID;
		
		private System.DateTime _ANUL_ANGAJARII;
		
		private EntitySet<CATEGORIE_PRODUSE> _CATEGORIE_PRODUSEs;
		
		private EntityRef<CREDENTIALE> _CREDENTIALE;
		
		private EntityRef<DETALII_CONT> _DETALII_CONT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnANGAJATI_IDChanging(int value);
    partial void OnANGAJATI_IDChanged();
    partial void OnCREDENTIALE_IDChanging(int value);
    partial void OnCREDENTIALE_IDChanged();
    partial void OnCONT_IDChanging(int value);
    partial void OnCONT_IDChanged();
    partial void OnANUL_ANGAJARIIChanging(System.DateTime value);
    partial void OnANUL_ANGAJARIIChanged();
    #endregion
		
		public ANGAJATI()
		{
			this._CATEGORIE_PRODUSEs = new EntitySet<CATEGORIE_PRODUSE>(new Action<CATEGORIE_PRODUSE>(this.attach_CATEGORIE_PRODUSEs), new Action<CATEGORIE_PRODUSE>(this.detach_CATEGORIE_PRODUSEs));
			this._CREDENTIALE = default(EntityRef<CREDENTIALE>);
			this._DETALII_CONT = default(EntityRef<DETALII_CONT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANGAJATI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ANGAJATI_ID
		{
			get
			{
				return this._ANGAJATI_ID;
			}
			set
			{
				if ((this._ANGAJATI_ID != value))
				{
					this.OnANGAJATI_IDChanging(value);
					this.SendPropertyChanging();
					this._ANGAJATI_ID = value;
					this.SendPropertyChanged("ANGAJATI_ID");
					this.OnANGAJATI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREDENTIALE_ID", DbType="Int NOT NULL")]
		public int CREDENTIALE_ID
		{
			get
			{
				return this._CREDENTIALE_ID;
			}
			set
			{
				if ((this._CREDENTIALE_ID != value))
				{
					if (this._CREDENTIALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCREDENTIALE_IDChanging(value);
					this.SendPropertyChanging();
					this._CREDENTIALE_ID = value;
					this.SendPropertyChanged("CREDENTIALE_ID");
					this.OnCREDENTIALE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_ID", DbType="Int NOT NULL")]
		public int CONT_ID
		{
			get
			{
				return this._CONT_ID;
			}
			set
			{
				if ((this._CONT_ID != value))
				{
					if (this._DETALII_CONT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCONT_IDChanging(value);
					this.SendPropertyChanging();
					this._CONT_ID = value;
					this.SendPropertyChanged("CONT_ID");
					this.OnCONT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANUL_ANGAJARII", DbType="Date NOT NULL")]
		public System.DateTime ANUL_ANGAJARII
		{
			get
			{
				return this._ANUL_ANGAJARII;
			}
			set
			{
				if ((this._ANUL_ANGAJARII != value))
				{
					this.OnANUL_ANGAJARIIChanging(value);
					this.SendPropertyChanging();
					this._ANUL_ANGAJARII = value;
					this.SendPropertyChanged("ANUL_ANGAJARII");
					this.OnANUL_ANGAJARIIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ANGAJATI_CATEGORIE_PRODUSE", Storage="_CATEGORIE_PRODUSEs", ThisKey="ANGAJATI_ID", OtherKey="ANGAJAT_ID")]
		public EntitySet<CATEGORIE_PRODUSE> CATEGORIE_PRODUSEs
		{
			get
			{
				return this._CATEGORIE_PRODUSEs;
			}
			set
			{
				this._CATEGORIE_PRODUSEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CREDENTIALE_ANGAJATI", Storage="_CREDENTIALE", ThisKey="CREDENTIALE_ID", OtherKey="CREDENTIALE_ID", IsForeignKey=true)]
		public CREDENTIALE CREDENTIALE
		{
			get
			{
				return this._CREDENTIALE.Entity;
			}
			set
			{
				CREDENTIALE previousValue = this._CREDENTIALE.Entity;
				if (((previousValue != value) 
							|| (this._CREDENTIALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CREDENTIALE.Entity = null;
						previousValue.ANGAJATIs.Remove(this);
					}
					this._CREDENTIALE.Entity = value;
					if ((value != null))
					{
						value.ANGAJATIs.Add(this);
						this._CREDENTIALE_ID = value.CREDENTIALE_ID;
					}
					else
					{
						this._CREDENTIALE_ID = default(int);
					}
					this.SendPropertyChanged("CREDENTIALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETALII_CONT_ANGAJATI", Storage="_DETALII_CONT", ThisKey="CONT_ID", OtherKey="CONT_ID", IsForeignKey=true)]
		public DETALII_CONT DETALII_CONT
		{
			get
			{
				return this._DETALII_CONT.Entity;
			}
			set
			{
				DETALII_CONT previousValue = this._DETALII_CONT.Entity;
				if (((previousValue != value) 
							|| (this._DETALII_CONT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETALII_CONT.Entity = null;
						previousValue.ANGAJATIs.Remove(this);
					}
					this._DETALII_CONT.Entity = value;
					if ((value != null))
					{
						value.ANGAJATIs.Add(this);
						this._CONT_ID = value.CONT_ID;
					}
					else
					{
						this._CONT_ID = default(int);
					}
					this.SendPropertyChanged("DETALII_CONT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CATEGORIE_PRODUSEs(CATEGORIE_PRODUSE entity)
		{
			this.SendPropertyChanging();
			entity.ANGAJATI = this;
		}
		
		private void detach_CATEGORIE_PRODUSEs(CATEGORIE_PRODUSE entity)
		{
			this.SendPropertyChanging();
			entity.ANGAJATI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORIE_PRODUSE")]
	public partial class CATEGORIE_PRODUSE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CATEGORIE_ID;
		
		private System.Nullable<int> _ANGAJAT_ID;
		
		private string _NUME;
		
		private EntitySet<PRODUSE> _PRODUSEs;
		
		private EntityRef<ANGAJATI> _ANGAJATI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCATEGORIE_IDChanging(int value);
    partial void OnCATEGORIE_IDChanged();
    partial void OnANGAJAT_IDChanging(System.Nullable<int> value);
    partial void OnANGAJAT_IDChanged();
    partial void OnNUMEChanging(string value);
    partial void OnNUMEChanged();
    #endregion
		
		public CATEGORIE_PRODUSE()
		{
			this._PRODUSEs = new EntitySet<PRODUSE>(new Action<PRODUSE>(this.attach_PRODUSEs), new Action<PRODUSE>(this.detach_PRODUSEs));
			this._ANGAJATI = default(EntityRef<ANGAJATI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORIE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CATEGORIE_ID
		{
			get
			{
				return this._CATEGORIE_ID;
			}
			set
			{
				if ((this._CATEGORIE_ID != value))
				{
					this.OnCATEGORIE_IDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORIE_ID = value;
					this.SendPropertyChanged("CATEGORIE_ID");
					this.OnCATEGORIE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANGAJAT_ID", DbType="Int")]
		public System.Nullable<int> ANGAJAT_ID
		{
			get
			{
				return this._ANGAJAT_ID;
			}
			set
			{
				if ((this._ANGAJAT_ID != value))
				{
					if (this._ANGAJATI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnANGAJAT_IDChanging(value);
					this.SendPropertyChanging();
					this._ANGAJAT_ID = value;
					this.SendPropertyChanged("ANGAJAT_ID");
					this.OnANGAJAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUME", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NUME
		{
			get
			{
				return this._NUME;
			}
			set
			{
				if ((this._NUME != value))
				{
					this.OnNUMEChanging(value);
					this.SendPropertyChanging();
					this._NUME = value;
					this.SendPropertyChanged("NUME");
					this.OnNUMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIE_PRODUSE_PRODUSE", Storage="_PRODUSEs", ThisKey="CATEGORIE_ID", OtherKey="CATEGORIE_ID")]
		public EntitySet<PRODUSE> PRODUSEs
		{
			get
			{
				return this._PRODUSEs;
			}
			set
			{
				this._PRODUSEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ANGAJATI_CATEGORIE_PRODUSE", Storage="_ANGAJATI", ThisKey="ANGAJAT_ID", OtherKey="ANGAJATI_ID", IsForeignKey=true)]
		public ANGAJATI ANGAJATI
		{
			get
			{
				return this._ANGAJATI.Entity;
			}
			set
			{
				ANGAJATI previousValue = this._ANGAJATI.Entity;
				if (((previousValue != value) 
							|| (this._ANGAJATI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ANGAJATI.Entity = null;
						previousValue.CATEGORIE_PRODUSEs.Remove(this);
					}
					this._ANGAJATI.Entity = value;
					if ((value != null))
					{
						value.CATEGORIE_PRODUSEs.Add(this);
						this._ANGAJAT_ID = value.ANGAJATI_ID;
					}
					else
					{
						this._ANGAJAT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ANGAJATI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUSEs(PRODUSE entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIE_PRODUSE = this;
		}
		
		private void detach_PRODUSEs(PRODUSE entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIE_PRODUSE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CREDENTIALE")]
	public partial class CREDENTIALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CREDENTIALE_ID;
		
		private string _NUME_UTILIZATOR;
		
		private string _PAROLA;
		
		private EntitySet<ANGAJATI> _ANGAJATIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCREDENTIALE_IDChanging(int value);
    partial void OnCREDENTIALE_IDChanged();
    partial void OnNUME_UTILIZATORChanging(string value);
    partial void OnNUME_UTILIZATORChanged();
    partial void OnPAROLAChanging(string value);
    partial void OnPAROLAChanged();
    #endregion
		
		public CREDENTIALE()
		{
			this._ANGAJATIs = new EntitySet<ANGAJATI>(new Action<ANGAJATI>(this.attach_ANGAJATIs), new Action<ANGAJATI>(this.detach_ANGAJATIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREDENTIALE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CREDENTIALE_ID
		{
			get
			{
				return this._CREDENTIALE_ID;
			}
			set
			{
				if ((this._CREDENTIALE_ID != value))
				{
					this.OnCREDENTIALE_IDChanging(value);
					this.SendPropertyChanging();
					this._CREDENTIALE_ID = value;
					this.SendPropertyChanged("CREDENTIALE_ID");
					this.OnCREDENTIALE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUME_UTILIZATOR", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NUME_UTILIZATOR
		{
			get
			{
				return this._NUME_UTILIZATOR;
			}
			set
			{
				if ((this._NUME_UTILIZATOR != value))
				{
					this.OnNUME_UTILIZATORChanging(value);
					this.SendPropertyChanging();
					this._NUME_UTILIZATOR = value;
					this.SendPropertyChanged("NUME_UTILIZATOR");
					this.OnNUME_UTILIZATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAROLA", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PAROLA
		{
			get
			{
				return this._PAROLA;
			}
			set
			{
				if ((this._PAROLA != value))
				{
					this.OnPAROLAChanging(value);
					this.SendPropertyChanging();
					this._PAROLA = value;
					this.SendPropertyChanged("PAROLA");
					this.OnPAROLAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CREDENTIALE_ANGAJATI", Storage="_ANGAJATIs", ThisKey="CREDENTIALE_ID", OtherKey="CREDENTIALE_ID")]
		public EntitySet<ANGAJATI> ANGAJATIs
		{
			get
			{
				return this._ANGAJATIs;
			}
			set
			{
				this._ANGAJATIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ANGAJATIs(ANGAJATI entity)
		{
			this.SendPropertyChanging();
			entity.CREDENTIALE = this;
		}
		
		private void detach_ANGAJATIs(ANGAJATI entity)
		{
			this.SendPropertyChanging();
			entity.CREDENTIALE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETALII_CONT")]
	public partial class DETALII_CONT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CONT_ID;
		
		private string _NUME;
		
		private string _PRENUME;
		
		private string _ADRESA_EMAIL;
		
		private System.DateTime _DATA_NASTERE;
		
		private string _TARA;
		
		private string _ORAS;
		
		private EntitySet<ANGAJATI> _ANGAJATIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCONT_IDChanging(int value);
    partial void OnCONT_IDChanged();
    partial void OnNUMEChanging(string value);
    partial void OnNUMEChanged();
    partial void OnPRENUMEChanging(string value);
    partial void OnPRENUMEChanged();
    partial void OnADRESA_EMAILChanging(string value);
    partial void OnADRESA_EMAILChanged();
    partial void OnDATA_NASTEREChanging(System.DateTime value);
    partial void OnDATA_NASTEREChanged();
    partial void OnTARAChanging(string value);
    partial void OnTARAChanged();
    partial void OnORASChanging(string value);
    partial void OnORASChanged();
    #endregion
		
		public DETALII_CONT()
		{
			this._ANGAJATIs = new EntitySet<ANGAJATI>(new Action<ANGAJATI>(this.attach_ANGAJATIs), new Action<ANGAJATI>(this.detach_ANGAJATIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CONT_ID
		{
			get
			{
				return this._CONT_ID;
			}
			set
			{
				if ((this._CONT_ID != value))
				{
					this.OnCONT_IDChanging(value);
					this.SendPropertyChanging();
					this._CONT_ID = value;
					this.SendPropertyChanged("CONT_ID");
					this.OnCONT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUME", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NUME
		{
			get
			{
				return this._NUME;
			}
			set
			{
				if ((this._NUME != value))
				{
					this.OnNUMEChanging(value);
					this.SendPropertyChanging();
					this._NUME = value;
					this.SendPropertyChanged("NUME");
					this.OnNUMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRENUME", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PRENUME
		{
			get
			{
				return this._PRENUME;
			}
			set
			{
				if ((this._PRENUME != value))
				{
					this.OnPRENUMEChanging(value);
					this.SendPropertyChanging();
					this._PRENUME = value;
					this.SendPropertyChanged("PRENUME");
					this.OnPRENUMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADRESA_EMAIL", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ADRESA_EMAIL
		{
			get
			{
				return this._ADRESA_EMAIL;
			}
			set
			{
				if ((this._ADRESA_EMAIL != value))
				{
					this.OnADRESA_EMAILChanging(value);
					this.SendPropertyChanging();
					this._ADRESA_EMAIL = value;
					this.SendPropertyChanged("ADRESA_EMAIL");
					this.OnADRESA_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_NASTERE", DbType="Date NOT NULL")]
		public System.DateTime DATA_NASTERE
		{
			get
			{
				return this._DATA_NASTERE;
			}
			set
			{
				if ((this._DATA_NASTERE != value))
				{
					this.OnDATA_NASTEREChanging(value);
					this.SendPropertyChanging();
					this._DATA_NASTERE = value;
					this.SendPropertyChanged("DATA_NASTERE");
					this.OnDATA_NASTEREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARA", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TARA
		{
			get
			{
				return this._TARA;
			}
			set
			{
				if ((this._TARA != value))
				{
					this.OnTARAChanging(value);
					this.SendPropertyChanging();
					this._TARA = value;
					this.SendPropertyChanged("TARA");
					this.OnTARAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORAS", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ORAS
		{
			get
			{
				return this._ORAS;
			}
			set
			{
				if ((this._ORAS != value))
				{
					this.OnORASChanging(value);
					this.SendPropertyChanging();
					this._ORAS = value;
					this.SendPropertyChanged("ORAS");
					this.OnORASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETALII_CONT_ANGAJATI", Storage="_ANGAJATIs", ThisKey="CONT_ID", OtherKey="CONT_ID")]
		public EntitySet<ANGAJATI> ANGAJATIs
		{
			get
			{
				return this._ANGAJATIs;
			}
			set
			{
				this._ANGAJATIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ANGAJATIs(ANGAJATI entity)
		{
			this.SendPropertyChanging();
			entity.DETALII_CONT = this;
		}
		
		private void detach_ANGAJATIs(ANGAJATI entity)
		{
			this.SendPropertyChanging();
			entity.DETALII_CONT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUSE")]
	public partial class PRODUSE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRODUSE_ID;
		
		private int _CATEGORIE_ID;
		
		private string _NUME;
		
		private System.Nullable<System.DateTime> _DATA_EXPIRARE;
		
		private System.DateTime _DATA_FABRICATIE;
		
		private int _NUMAR_PRODUSE;
		
		private double _PRET_BUCATA;
		
		private EntityRef<CATEGORIE_PRODUSE> _CATEGORIE_PRODUSE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRODUSE_IDChanging(int value);
    partial void OnPRODUSE_IDChanged();
    partial void OnCATEGORIE_IDChanging(int value);
    partial void OnCATEGORIE_IDChanged();
    partial void OnNUMEChanging(string value);
    partial void OnNUMEChanged();
    partial void OnDATA_EXPIRAREChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_EXPIRAREChanged();
    partial void OnDATA_FABRICATIEChanging(System.DateTime value);
    partial void OnDATA_FABRICATIEChanged();
    partial void OnNUMAR_PRODUSEChanging(int value);
    partial void OnNUMAR_PRODUSEChanged();
    partial void OnPRET_BUCATAChanging(double value);
    partial void OnPRET_BUCATAChanged();
    #endregion
		
		public PRODUSE()
		{
			this._CATEGORIE_PRODUSE = default(EntityRef<CATEGORIE_PRODUSE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUSE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRODUSE_ID
		{
			get
			{
				return this._PRODUSE_ID;
			}
			set
			{
				if ((this._PRODUSE_ID != value))
				{
					this.OnPRODUSE_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUSE_ID = value;
					this.SendPropertyChanged("PRODUSE_ID");
					this.OnPRODUSE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORIE_ID", DbType="Int NOT NULL")]
		public int CATEGORIE_ID
		{
			get
			{
				return this._CATEGORIE_ID;
			}
			set
			{
				if ((this._CATEGORIE_ID != value))
				{
					if (this._CATEGORIE_PRODUSE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCATEGORIE_IDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORIE_ID = value;
					this.SendPropertyChanged("CATEGORIE_ID");
					this.OnCATEGORIE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUME", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NUME
		{
			get
			{
				return this._NUME;
			}
			set
			{
				if ((this._NUME != value))
				{
					this.OnNUMEChanging(value);
					this.SendPropertyChanging();
					this._NUME = value;
					this.SendPropertyChanged("NUME");
					this.OnNUMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_EXPIRARE", DbType="Date")]
		public System.Nullable<System.DateTime> DATA_EXPIRARE
		{
			get
			{
				return this._DATA_EXPIRARE;
			}
			set
			{
				if ((this._DATA_EXPIRARE != value))
				{
					this.OnDATA_EXPIRAREChanging(value);
					this.SendPropertyChanging();
					this._DATA_EXPIRARE = value;
					this.SendPropertyChanged("DATA_EXPIRARE");
					this.OnDATA_EXPIRAREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_FABRICATIE", DbType="Date NOT NULL")]
		public System.DateTime DATA_FABRICATIE
		{
			get
			{
				return this._DATA_FABRICATIE;
			}
			set
			{
				if ((this._DATA_FABRICATIE != value))
				{
					this.OnDATA_FABRICATIEChanging(value);
					this.SendPropertyChanging();
					this._DATA_FABRICATIE = value;
					this.SendPropertyChanged("DATA_FABRICATIE");
					this.OnDATA_FABRICATIEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMAR_PRODUSE", DbType="Int NOT NULL")]
		public int NUMAR_PRODUSE
		{
			get
			{
				return this._NUMAR_PRODUSE;
			}
			set
			{
				if ((this._NUMAR_PRODUSE != value))
				{
					this.OnNUMAR_PRODUSEChanging(value);
					this.SendPropertyChanging();
					this._NUMAR_PRODUSE = value;
					this.SendPropertyChanged("NUMAR_PRODUSE");
					this.OnNUMAR_PRODUSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRET_BUCATA", DbType="Float NOT NULL")]
		public double PRET_BUCATA
		{
			get
			{
				return this._PRET_BUCATA;
			}
			set
			{
				if ((this._PRET_BUCATA != value))
				{
					this.OnPRET_BUCATAChanging(value);
					this.SendPropertyChanging();
					this._PRET_BUCATA = value;
					this.SendPropertyChanged("PRET_BUCATA");
					this.OnPRET_BUCATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIE_PRODUSE_PRODUSE", Storage="_CATEGORIE_PRODUSE", ThisKey="CATEGORIE_ID", OtherKey="CATEGORIE_ID", IsForeignKey=true)]
		public CATEGORIE_PRODUSE CATEGORIE_PRODUSE
		{
			get
			{
				return this._CATEGORIE_PRODUSE.Entity;
			}
			set
			{
				CATEGORIE_PRODUSE previousValue = this._CATEGORIE_PRODUSE.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORIE_PRODUSE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORIE_PRODUSE.Entity = null;
						previousValue.PRODUSEs.Remove(this);
					}
					this._CATEGORIE_PRODUSE.Entity = value;
					if ((value != null))
					{
						value.PRODUSEs.Add(this);
						this._CATEGORIE_ID = value.CATEGORIE_ID;
					}
					else
					{
						this._CATEGORIE_ID = default(int);
					}
					this.SendPropertyChanged("CATEGORIE_PRODUSE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
